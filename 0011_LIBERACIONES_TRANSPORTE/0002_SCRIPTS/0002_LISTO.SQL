--VALIDADORES
CREATE TABLE OPENLOOP.VALIDADORES 
(
  UIDVALIDADOR VARCHAR2(50) NOT NULL 
, SNUMEROSERIE VARCHAR2(50) 
, CONSTRAINT VALIDADORES_PK PRIMARY KEY 
  (
    UIDVALIDADOR 
  )
  ENABLE 
) 
TABLESPACE DATA;

COMMENT ON COLUMN OPENLOOP.VALIDADORES.UIDVALIDADOR IS 'IDENTIFICADOR DEL REGISTRO';

COMMENT ON COLUMN OPENLOOP.VALIDADORES.SNUMEROSERIE IS 'NÚMERO DE SERIE DEL VALIDADOR';

--VSAM
CREATE TABLE OPENLOOP.VSAM 
(
  UIDVSAM VARCHAR2(50) NOT NULL 
, SCSN VARCHAR2(17) NOT NULL 
, CONSTRAINT VSAM_PK PRIMARY KEY 
  (
    UIDVSAM 
  )
  ENABLE 
) 
TABLESPACE DATA;

COMMENT ON COLUMN OPENLOOP.VSAM.UIDVSAM IS 'IDENTIFICADOR DEL REGISTRO';
COMMENT ON COLUMN OPENLOOP.VSAM.SCSN IS 'CSN DE LA VSAM, SE USA COMO IDENTIFICADOR DEL VALIDADOR CUANDO SE ASIGNA';

--VALIDADORVSAM
CREATE TABLE OPENLOOP.VALIDADORVSAM 
(
  UIDVALIDADORVSAM VARCHAR2(50) NOT NULL 
, UIDVALIDADOR VARCHAR2(50) NOT NULL 
, UIDVSAM VARCHAR2(50) NOT NULL 
, CONSTRAINT VALIDADORVSAM_PK PRIMARY KEY 
  (
    UIDVALIDADORVSAM 
  )
  ENABLE 
) 
TABLESPACE DATA;

COMMENT ON COLUMN OPENLOOP.VALIDADORVSAM.UIDVALIDADORVSAM IS 'IDENTIFICADOR DEL REGISTRO';

COMMENT ON COLUMN OPENLOOP.VALIDADORVSAM.UIDVALIDADOR IS 'IDENTIFICADOR DEL VALIDADOR';

COMMENT ON COLUMN OPENLOOP.VALIDADORVSAM.UIDVSAM IS 'IDENTIFICADOR DE LA VSAM';

--AUTOBUS

CREATE TABLE OPENLOOP.AUTOBUSES 
(
  UIDAUTOBUS VARCHAR2(50) NOT NULL 
, SNUMECO VARCHAR2(20) 
, CONSTRAINT AUTOBUS_PK PRIMARY KEY 
  (
    UIDAUTOBUS 
  )
  ENABLE 
) 
TABLESPACE DATA;

COMMENT ON COLUMN OPENLOOP.AUTOBUSES.UIDAUTOBUS IS 'IDENTICADOR DEL REGISTRO';

COMMENT ON COLUMN OPENLOOP.AUTOBUSES.SNUMECO IS 'PLACA DEL AUTOBUS';

-- AUTOBUSES VALIDADOR 

CREATE TABLE OPENLOOP.AUTOBUSVALIDADOR 
(
  UIDAUTOBUS VARCHAR2(50) NOT NULL 
, UIDVALIDADOR VARCHAR2(50) NOT NULL 
, CONSTRAINT AUTOBUSVALIDADOR_PK PRIMARY KEY 
  (
    UIDAUTOBUS 
  , UIDVALIDADOR 
  )
  ENABLE 
)
TABLESPACE DATA;

COMMENT ON COLUMN OPENLOOP.AUTOBUSVALIDADOR.UIDAUTOBUS IS 'IDENTIFICADOR DEL AUTOBUS';

COMMENT ON COLUMN OPENLOOP.AUTOBUSVALIDADOR.UIDVALIDADOR IS 'IDENTIFICADOR DEL VALIDADOR';

--Validadores
MERGE INTO openloop.validadores v
USING (
select * from catalogos.validadores  WHERE bactivo = 1
) c
ON (v.UIDVALIDADOR = c.UIDVALIDADOR)
WHEN NOT MATCHED THEN 
  INSERT (UIDVALIDADOR, SNUMEROSERIE)
  VALUES (c.UIDVALIDADOR, c.SNUMEROSERIE);
  
--VSAM
MERGE INTO openloop.vsam v
USING (
select * from catalogos.vsam  WHERE bactivo = 1
) c
ON (v.UIDVSAM = c.UIDVSAM)
WHEN NOT MATCHED THEN 
  INSERT (UIDVSAM, SCSN)
  VALUES (c.UIDVSAM, c.SCSN);
  
--Autobus
MERGE INTO openloop.autobuses v
USING (
select * from catalogos.autobuses  WHERE bactivo = 1
) c
ON (v.UIDAUTOBUS = c.UIDAUTOBUS)
WHEN NOT MATCHED THEN 
  INSERT (UIDAUTOBUS, SNUMECO)
  VALUES (c.UIDAUTOBUS, c.SNUMECO);
  
--AutobusValidador
MERGE INTO openloop.autobusvalidador v
USING (
select * from catalogos.autobusvalidador  WHERE bactivo = 1
) c
ON (v.UIDAUTOBUS = c.UIDAUTOBUS
    AND v.UIDVALIDADOR = c.UIDVALIDADOR)
WHEN NOT MATCHED THEN 
  INSERT (UIDAUTOBUS, UIDVALIDADOR)
  VALUES (c.UIDAUTOBUS, c.UIDVALIDADOR);
  
--ValidadorVsam
MERGE INTO openloop.validadorvsam v
USING (
select * from catalogos.validadorvsam  WHERE bactivo = 1
) c
ON (v.UIDVALIDADORVSAM = c.UIDVALIDADORVSAM)
WHEN NOT MATCHED THEN 
  INSERT (UIDVALIDADORVSAM, UIDVALIDADOR, UIDVSAM)
  VALUES (c.UIDVALIDADORVSAM, c.UIDVALIDADOR, c.UIDVSAM);
  
--Transacciones 
ALTER TABLE OPENLOOP.TRANSACCIONES 
ADD (SNUMECO VARCHAR2(20));

ALTER TABLE OPENLOOP.TRANSACCIONES 
ADD (SNUMEROSERIE VARCHAR2(50));

ALTER TABLE OPENLOOP.CONCILIACIONES 
ADD (SEMVCARDBRAND VARCHAR2(50) );

ALTER TABLE OPENLOOP.CONCILIACIONES 
ADD (SEMVCARDLAST VARCHAR2(4) );

COMMENT ON COLUMN OPENLOOP.CONCILIACIONES.SEMVCARDBRAND IS 'TIPO TARJETA VISA/MASTERCAR';

COMMENT ON COLUMN OPENLOOP.CONCILIACIONES.SEMVCARDLAST IS 'ÚLTIMOS 4 DIGITOS DE LA TARJETA';

ALTER TABLE OPENLOOP.TRANSACCIONES 
ADD (SULTIMOESTADOOPERACION VARCHAR2(50) );

ALTER TABLE OPENLOOP.LOGERRORVALIDADOR
ADD (SEMVCARDBRAND VARCHAR2(50) );

ALTER TABLE OPENLOOP.LOGERRORVALIDADOR 
ADD (SEMVCARDLAST VARCHAR2(4) );

COMMENT ON COLUMN OPENLOOP.LOGERRORVALIDADOR.SEMVCARDBRAND IS 'TIPO TARJETA VISA/MASTERCAR';

COMMENT ON COLUMN OPENLOOP.LOGERRORVALIDADOR.SEMVCARDLAST IS 'ÚLTIMOS 4 DIGITOS DE LA TARJETA';

--------------------------------------------------ES NECESARIO COLOCAR LOS ESQUEMAS DE ESTA SECCION ESQUEMA.TABLA
--SEMVCARDBIN IDVALIDADOR

ALTER TABLE OPENLOOP.LOGERRORVALIDADOR 
ADD (SEMVCARDBIN VARCHAR2(6) );

COMMENT ON COLUMN OPENLOOP.LOGERRORVALIDADOR.SEMVCARDBIN IS 'PRIMEROS 6 DIGITOS DE LA TARJETA';

ALTER TABLE OPENLOOP.CONCILIACIONES 
ADD (SEMVCARDBIN VARCHAR2(6) );

COMMENT ON COLUMN OPENLOOP.CONCILIACIONES.SEMVCARDBIN IS 'PRIMEROS 6 DIGITOS DE LA TARJETA';

ALTER TABLE OPENLOOP.CONCILIACIONES 
ADD (IDVALIDADOR VARCHAR2(17) );

COMMENT ON COLUMN OPENLOOP.CONCILIACIONES.IDVALIDADOR IS 'CSN DEL VALIDADOR';

ALTER TABLE OPENLOOP.LOGERRORVALIDADOR 
ADD (IDVALIDADOR VARCHAR2(17) );

COMMENT ON COLUMN OPENLOOP.LOGERRORVALIDADOR.IDVALIDADOR IS 'CSN DEL VALIDADOR';


------------LLLEGAMOS ACA
--Conciliaciones
UPDATE openloop.conciliaciones c
SET (c.uidvalidador, c.idvalidador)= (
    SELECT "v1"."UIDVALIDADOR", "v"."SCSN"
    FROM CATALOGOS."VSAM" "v"
    INNER JOIN CATALOGOS."VALIDADORVSAM" "v0" ON "v"."UIDVSAM" = "v0"."UIDVSAM"
    INNER JOIN CATALOGOS."VALIDADORES" "v1" ON "v0"."UIDVALIDADOR" = "v1"."UIDVALIDADOR"
    INNER JOIN CATALOGOS."AUTOBUSVALIDADOR" "a" ON "v1"."UIDVALIDADOR" = "a"."UIDVALIDADOR"
    INNER JOIN CATALOGOS."AUTOBUSES" "a0" ON "a"."UIDAUTOBUS" = "a0"."UIDAUTOBUS"
    WHERE "v"."SCSN" = c.uidvalidador AND "v".bactivo = 1 AND "v1".bactivo = 1 AND "v0".bactivo = 1 AND "a".bactivo = 1 AND "a0".bactivo = 1 
)
WHERE EXISTS (
    SELECT 1
    FROM CATALOGOS.VSAM v
    WHERE v.scsn = c.uidvalidador AND v.bactivo = 1
);

--LogErrorValidador
UPDATE openloop.LogErrorValidador l
SET (l.uidvalidador,l.idvalidador)= (
    SELECT "v1"."UIDVALIDADOR", "v"."SCSN"
    FROM CATALOGOS."VSAM" "v"
    INNER JOIN CATALOGOS."VALIDADORVSAM" "v0" ON "v"."UIDVSAM" = "v0"."UIDVSAM"
    INNER JOIN CATALOGOS."VALIDADORES" "v1" ON "v0"."UIDVALIDADOR" = "v1"."UIDVALIDADOR"
    INNER JOIN CATALOGOS."AUTOBUSVALIDADOR" "a" ON "v1"."UIDVALIDADOR" = "a"."UIDVALIDADOR"
    INNER JOIN CATALOGOS."AUTOBUSES" "a0" ON "a"."UIDAUTOBUS" = "a0"."UIDAUTOBUS"
    WHERE "v"."SCSN" = l.uidvalidador AND "v".bactivo = 1 AND "v1".bactivo = 1 AND "v0".bactivo = 1 AND "a".bactivo = 1 AND "a0".bactivo = 1 
)
WHERE EXISTS (
    SELECT 1
    FROM CATALOGOS.VSAM v
    WHERE v.scsn = l.uidvalidador AND v.bactivo = 1
);

--Transacciones
UPDATE openloop.Transacciones t
SET (t.uidvalidador,t.snumeco, t.snumeroserie)= (
    SELECT "v1"."UIDVALIDADOR", "a0"."SNUMECO", "v1"."SNUMEROSERIE" 
    FROM CATALOGOS."VSAM" "v"
    INNER JOIN CATALOGOS."VALIDADORVSAM" "v0" ON "v"."UIDVSAM" = "v0"."UIDVSAM"
    INNER JOIN CATALOGOS."VALIDADORES" "v1" ON "v0"."UIDVALIDADOR" = "v1"."UIDVALIDADOR"
    INNER JOIN CATALOGOS."AUTOBUSVALIDADOR" "a" ON "v1"."UIDVALIDADOR" = "a"."UIDVALIDADOR"
    INNER JOIN CATALOGOS."AUTOBUSES" "a0" ON "a"."UIDAUTOBUS" = "a0"."UIDAUTOBUS"
    WHERE "v"."SCSN" = t.idvalidador AND "v".bactivo = 1 AND "v1".bactivo = 1 AND "v0".bactivo = 1 AND "a".bactivo = 1 AND "a0".bactivo = 1 
)
WHERE EXISTS (
    SELECT 1
    FROM CATALOGOS.VSAM v
    WHERE v.scsn = t.idvalidador AND v.bactivo = 1
);

--Restricción UNIQUE



DELETE FROM openloop.CONCILIACIONES
WHERE ROWID IN (
    SELECT rid FROM (
        SELECT ROWID AS rid,
               ROW_NUMBER() OVER (PARTITION BY STOKENTRANSACTION ORDER BY dtfechacreacion DESC) AS rn
        FROM openloop.CONCILIACIONES
        --WHERE STOKENTRANSACTION IS NOT NULL   
        --AND STOKENTRANSACTION != '00000000-0000-0000-0000-000000000000'
        --AND STOKENTRANSACTION != '00000000000000000000000000000000'
    )
    WHERE rn > 1
);

ALTER TABLE openloop.CONCILIACIONES
ADD CONSTRAINT uk_token_transaction UNIQUE (STOKENTRANSACTION);



-----------SOLICITUD DURANTE SESION

ALTER TABLE OPENLOOP.TRANSACCIONES DROP COLUMN SULTIMOESTADOOPERACION; 