--Evento app.update.usuariobymonedero
SELECT --t1.SNOMBRE, t2.SNOMBRE, t1.SPRIMERAPELLIDO, t2.SAPELLIDOPATERNO, t1.SSEGUNDOAPELLIO, t2.SAPELLIDOMATERNO
	'COMPARACIÓN ENTRE CREDENCIALIZACION.USUARIOSTARJETAS Y APP.USUARIO'AS fuente,
	COUNT(0) AS discrepancias
FROM PREP_CREDENCIALIZACION.USUARIOSTARJETAS t1
INNER JOIN PREP_APP.USUARIO t2 ON t1.UIDUSUARIOAPP = t2.UIDUSUARIO
WHERE t1.BACTIVO = 1 AND t1.BBAJA = 0 
AND (t1.SNOMBRE <> t2.SNOMBRE OR t1.SPRIMERAPELLIDO <> t2.SAPELLIDOPATERNO OR t1.SSEGUNDOAPELLIO <> t2.SAPELLIDOMATERNO)

UNION ALL

--Evento Monedero.Creacion
SELECT 
    'MONEDEROS no replicados (MONEDEROCOMANDOS vs APP)' AS fuente,
    COUNT(0) AS discrepancias
FROM  PREP_MONEDEROCOMANDOS.MONEDERO t1
LEFT JOIN PREP_APP.ESTADODECUENTA t2 ON t1.UIDMONEDERO = t2.UIDMONEDERO 
INNER JOIN PREP_MONEDEROCONSULTAS.ESTADODECUENTA t3 ON t1.UIDMONEDERO = t3.UIDMONEDERO
WHERE t1.BACTIVO = 1 AND t1.BBAJA = 0 AND t1.UIDTIPOSMONEDERO = '9be96cf8-4ee2-4762-9f77-7c817e851c03' AND t2.UIDMONEDERO IS NULL

UNION ALL 

--Evento Monedero.Actualizacion
SELECT --t1.UIDTIPOTARIFA, t2.UIDTIPOTARIFA
    'MONEDEROS diferencia en campo UIDTIPOTARIFA (MONEDEROCOMANDOS vs APP)' AS fuente,
    COUNT(0) AS discrepancias
FROM  PREP_MONEDEROCOMANDOS.MONEDERO t1
INNER JOIN PREP_APP.ESTADODECUENTA t2 ON t1.UIDMONEDERO = t2.UIDMONEDERO 
WHERE t1.BACTIVO = 1 AND t1.BBAJA = 0 AND t1.UIDTIPOSMONEDERO = '9be96cf8-4ee2-4762-9f77-7c817e851c03' 
AND (t1.UIDTIPOTARIFA <> t2.UIDTIPOTARIFA)

UNION ALL

--Evento Monedero.Estatus
SELECT 
	'MONEDERO diferencias en campos de estatus (MONEDEROCONSULTAS vs APP)' AS fuente,
	COUNT(0) AS discrepancias
FROM PREP_MONEDEROCONSULTAS.ESTADODECUENTA t1
INNER JOIN PREP_APP.ESTADODECUENTA  t2 ON t1.UIDMONEDERO = t2.UIDMONEDERO
WHERE (t1.BACTIVO <> t2.BACTIVO OR t1.BBAJA <> T2.BBAJA OR t1.UIDESTATUS <> t2.UIDESTATUS OR t1.UIDMOTIVO <> t2.UIDMOTIVO)

UNION ALL

--Evento Monedero.Abono y Monedero.Debito
SELECT 
	'MONEDERO diferencias' AS fuente,
	COUNT(0) AS discrepancias
FROM PREP_MONEDEROCONSULTAS.ESTADODECUENTA t1
INNER JOIN PREP_APP.ESTADODECUENTA  t2 ON t1.UIDMONEDERO = t2.UIDMONEDERO
WHERE t1.DSALDO <> t2.DSALDO 


UNION ALL 

-- APP SERVICE --
-- Motivos
-- Diferencias en registros MotivosCreacion
SELECT 
	'MOTIVOS no replicados (APP vs CATALOGOS)' AS fuente,
	COUNT(0) AS discrepancias
FROM  PREP_CATALOGOS.MOTIVOS t1
LEFT JOIN PREP_APP.MOTIVOS t2 ON t1.UIDMOTIVO  = t2.UIDMOTIVO 
WHERE t1.BACTIVO = 1 AND t1.BBAJA = 0 AND t2.UIDMOTIVO  IS NULL
UNION ALL
--Diferencias en campos MotivosActualizacion200
SELECT 
	'MOTIVOS diferencias en campos (APP vs CATALOGOS)' AS fuente,
	COUNT(0) AS discrepancias
FROM PREP_CATALOGOS.MOTIVOS t1
INNER JOIN PREP_APP.MOTIVOS t2 ON t1.UIDMOTIVO  = t2.UIDMOTIVO 
WHERE t1.BACTIVO = 1 AND t1.BBAJA = 0 
AND (t1.SMOTIVO <> t2.SMOTIVO 
OR t1.BACTIVO <> t2.BACTIVO 
OR t1.BBAJA <> t2.BBAJA 
OR t1.SDESCRIPCION <> t2.SDESCRIPCION
OR t1.ITIPO <> t2.ITIPO
OR t1.BPERMITIROPERACIONES <> t2.BPERMITIROPERACIONES
OR t1.BPERMITIRREACTIVAR <>  t2.BPERMITIRREACTIVAR
OR t1.BPERMITIREDITAR <> t2.BPERMITIREDITAR
)

UNION ALL

-- TipoOperaciones
-- Diferencias en registros TipoOperacionesComercioCreacion
SELECT 
	'TIPOOPERACIONES no replicados (APP vs CATALOGOS)' AS fuente,
	COUNT(0) AS discrepancias
FROM PREP_CATALOGOS.TIPOOPERACIONES t1
LEFT JOIN PREP_APP.TIPOOPERACIONES t2 ON t1.UIDTIPOOPERACION  = t2.UIDTIPOOPERACION 
WHERE t1.BACTIVO = 1 AND t1.BBAJA = 0 AND t2.UIDTIPOOPERACION  IS NULL
UNION ALL
--Diferencias en campos TipoOperacionesComercioActualizacion
SELECT 
	'TIPOOPERACIONES diferencias en campos (APP vs CATALOGOS)' AS fuente,
	COUNT(0) AS discrepancias
FROM  PREP_CATALOGOS.TIPOOPERACIONES t1
INNER JOIN PREP_APP.TIPOOPERACIONES t2 ON t1.UIDTIPOOPERACION  = t2.UIDTIPOOPERACION 
WHERE t1.BACTIVO = 1 AND t1.BBAJA = 0 
AND (t1.SNOMBRE <> t2.SNOMBRE 
OR t1.SCLAVE <> t2.SCLAVE
OR t1.IMODULO <> t2.IMODULO
)
UNION ALL

-- Diferencias en registros TipoTarifasCreacion
SELECT 
	'TIPOTARIFAS no replicados (APP vs CATALOGOS)' AS fuente,
	COUNT(0) AS discrepancias
FROM PREP_CATALOGOS.TIPOTARIFAS t1
LEFT JOIN PREP_APP.TIPOSTARIFA t2 ON t1.UIDTIPOTARIFA  = t2.UIDTIPOTARIFA 
WHERE t1.BACTIVO = 1 AND t1.BBAJA = 0 AND t2.UIDTIPOTARIFA  IS NULL
UNION ALL
--Diferencias en campos TipoTarifasActualizacion
SELECT 
	'TIPOTARIFAS diferencias en campos (APP vs CATALOGOS)' AS fuente,
	COUNT(0) AS discrepancias
FROM PREP_CATALOGOS.TIPOTARIFAS t1
INNER JOIN PREP_APP.TIPOSTARIFA t2 ON t1.UIDTIPOTARIFA  = t2.UIDTIPOTARIFA 
WHERE t1.BACTIVO = 1 AND t1.BBAJA = 0 
AND (t1.STIPOTARIFA <> t2.STIPOTARIFA 
OR t1.SCLAVETIPOTARIFA <> t2.SCLAVETIPOTARIFA
OR t1.ITIPOTARJETA <> t2.ITIPOTARJETA
)

--UPDATE / INSERTS

--Evento app.update.usuariobymonedero
MERGE INTO PREP_APP.USUARIO REPLICA
USING (
	SELECT t1.UIDUSUARIOAPP, t1.SNOMBRE, t1.SPRIMERAPELLIDO, t1.SSEGUNDOAPELLIO
	FROM PREP_CREDENCIALIZACION.USUARIOSTARJETAS t1
	INNER JOIN PREP_APP.USUARIO t2 ON t1.UIDUSUARIOAPP = t2.UIDUSUARIO
	WHERE t1.BACTIVO = 1 AND t1.BBAJA = 0 
	AND (t1.SNOMBRE <> t2.SNOMBRE OR t1.SPRIMERAPELLIDO <> t2.SAPELLIDOPATERNO OR t1.SSEGUNDOAPELLIO <> t2.SAPELLIDOMATERNO)
) ORIGEN
ON (REPLICA.UIDUSUARIO = ORIGEN.UIDUSUARIOAPP)
WHEN MATCHED THEN
UPDATE SET REPLICA.SNOMBRE = ORIGEN.SNOMBRE, REPLICA.SAPELLIDOPATERNO = ORIGEN.SPRIMERAPELLIDO, REPLICA.SAPELLIDOMATERNO = ORIGEN.SSEGUNDOAPELLIO

--insert
INSERT INTO PREP_APP.ESTADODECUENTA (
  DSALDO,
  BACTIVO,
  BBAJA,
  SESTATUS,
  DTFECHACREACION,
  UIDESTADODECUENTA,
  DTFECHAULTIMAOPERACION,
  DTFECHAULTIMOABONO,
  SFECHAVIGENCIA,
  DTFECHABAJA,
  UIDESTATUS,
  UIDMONEDERO,
  UIDTIPOTARIFA,
  UIDULTIMAOPERACION,
  INUMMONEDERO,
  STELEFONO,
  STIPOTARIFA,
  SNOMBRE,
  SAPELLIDOMATERNO,
  SAPELLIDOPATERNO,
  SCORREO,
  DTFECHANACIMIENTO,
  UIDTIPOMONEDERO,
  STIPOMONEDERO
)
SELECT
  t3.DSALDO,
  t1.BACTIVO,
  t1.BBAJA,
  t3.SESTATUS,
  t1.DTFECHACREACION,
  t3.UIDESTADODECUENTA,
  t3.DTFECHAULTIMAOPERACION,
  t3.DTFECHAULTIMOABONO,
  t1.SFECHAVIGENCIA,
  t1.DTFECHABAJA,
  t3.UIDESTATUS,
  t1.UIDMONEDERO,
  t1.UIDTIPOTARIFA,
  t3.UIDULTIMAOPERACION,
  t1.INUMMONEDERO,
  t1.STELEFONO,
  t3.STIPOTARIFA,
  t3.SNOMBRE,
  t3.SAPELLIDOMATERNO,
  t3.SAPELLIDOPATERNO,
  t3.SCORREO,
  t3.DTFECHANACIMIENTO,
  t1.UIDTIPOSMONEDERO,
  t3.STIPOMONEDERO
FROM PREP_MONEDEROCOMANDOS.MONEDERO t1
LEFT JOIN PREP_APP.ESTADODECUENTA t2 ON t1.UIDMONEDERO = t2.UIDMONEDERO
INNER JOIN PREP_MONEDEROCONSULTAS.ESTADODECUENTA t3 ON t1.UIDMONEDERO = t3.UIDMONEDERO
WHERE t1.BACTIVO = 1
  AND t1.BBAJA = 0
  AND t1.UIDTIPOSMONEDERO = '9be96cf8-4ee2-4762-9f77-7c817e851c03'
 AND t2.UIDMONEDERO IS NULL;

UNION ALL 

--Evento Monedero.Actualizacion
MERGE INTO PREP_APP.ESTADODECUENTA REPLICA
USING (
	SELECT t1.UIDMONEDERO, t1.UIDTIPOTARIFA
	FROM  PREP_MONEDEROCOMANDOS.MONEDERO t1
	INNER JOIN PREP_APP.ESTADODECUENTA t2 ON t1.UIDMONEDERO = t2.UIDMONEDERO 
	WHERE t1.BACTIVO = 1 AND t1.BBAJA = 0 AND t1.UIDTIPOSMONEDERO = '9be96cf8-4ee2-4762-9f77-7c817e851c03' 
	AND (t1.UIDTIPOTARIFA <> t2.UIDTIPOTARIFA)
) ORIGEN
ON (REPLICA.UIDMONEDERO = ORIGEN.UIDMONEDERO)
WHEN MATCHED THEN
UPDATE SET REPLICA.UIDTIPOTARIFA = ORIGEN.UIDTIPOTARIFA
--Evento Monedero.Estatus
MERGE INTO PREP_APP.ESTADODECUENTA REPLICA
USING (
	SELECT t1.UIDMONEDERO, t1.BACTIVO, t1.BBAJA, t1.UIDESTATUS, t1.UIDMOTIVO
	FROM PREP_MONEDEROCONSULTAS.ESTADODECUENTA t1
	INNER JOIN PREP_APP.ESTADODECUENTA  t2 ON t1.UIDMONEDERO = t2.UIDMONEDERO
	WHERE (t1.BACTIVO <> t2.BACTIVO OR t1.BBAJA <> T2.BBAJA OR t1.UIDESTATUS <> t2.UIDESTATUS OR t1.UIDMOTIVO <> t2.UIDMOTIVO)
) ORIGEN
ON (REPLICA.UIDMONEDERO = ORIGEN.UIDMONEDERO)
WHEN MATCHED THEN
UPDATE SET REPLICA.BACTIVO = ORIGEN.BACTIVO, REPLICA.BBAJA = ORIGEN.BBAJA, REPLICA.UIDESTATUS = ORIGEN.UIDESTATUS, REPLICA.UIDMOTIVO = ORIGEN.UIDMOTIVO

--Evento Monedero.Abono y Monedero.Debito
MERGE INTO PREP_APP.ESTADODECUENTA REPLICA
USING (
	SELECT t1.UIDMONEDERO, t1.DSALDO
	FROM PREP_MONEDEROCONSULTAS.ESTADODECUENTA t1
	INNER JOIN PREP_APP.ESTADODECUENTA  t2 ON t1.UIDMONEDERO = t2.UIDMONEDERO
	WHERE t1.DSALDO <> t2.DSALDO 
) ORIGEN
ON (REPLICA.UIDMONEDERO = ORIGEN.UIDMONEDERO)
WHEN MATCHED THEN
UPDATE SET REPLICA.DSALDO = ORIGEN.DSALDO 

-- APP SERVICE --
------------------ Motivos ------------------ 
-- Inserción en registros MotivosCreacion
INSERT INTO PREP_APP.MOTIVOS (
    UIDMOTIVO,
    SMOTIVO,
    SDESCRIPCION,
    ITIPO,
    BPERMITIROPERACIONES,
    BPERMITIRREACTIVAR,
    BPERMITIREDITAR,
    BACTIVO,
    BBAJA
)
SELECT 
    t1.UIDMOTIVO,
    t1.SMOTIVO,
    t1.SDESCRIPCION,
    t1.ITIPO,
    t1.BPERMITIROPERACIONES,
    t1.BPERMITIRREACTIVAR,
    t1.BPERMITIREDITAR,
    t1.BACTIVO,
    t1.BBAJA
FROM PREP_CATALOGOS.MOTIVOS t1
LEFT JOIN PREP_APP.MOTIVOS t2 ON t1.UIDMOTIVO = t2.UIDMOTIVO
WHERE t1.BACTIVO = 1
  AND t1.BBAJA = 0
  AND t2.UIDMOTIVO IS NULL;
--Actualización en campos MotivosActualizacion

MERGE INTO PREP_APP.MOTIVOS REPLICA
USING (
    SELECT 
        t1.UIDMOTIVO,
        t1.SMOTIVO,
        t1.BACTIVO,
        t1.BBAJA,
        t1.SDESCRIPCION,
        t1.ITIPO,
        t1.BPERMITIROPERACIONES,
        t1.BPERMITIRREACTIVAR,
        t1.BPERMITIREDITAR
    FROM PREP_CATALOGOS.MOTIVOS t1
    INNER JOIN PREP_APP.MOTIVOS t2 ON t1.UIDMOTIVO = t2.UIDMOTIVO
    WHERE t1.BACTIVO = 1 AND t1.BBAJA = 0
      AND (
        t1.SMOTIVO <> t2.SMOTIVO OR
        t1.BACTIVO <> t2.BACTIVO OR
        t1.BBAJA <> t2.BBAJA OR
        t1.SDESCRIPCION <> t2.SDESCRIPCION OR
        t1.ITIPO <> t2.ITIPO OR
        t1.BPERMITIROPERACIONES <> t2.BPERMITIROPERACIONES OR
        t1.BPERMITIRREACTIVAR <> t2.BPERMITIRREACTIVAR OR
        t1.BPERMITIREDITAR <> t2.BPERMITIREDITAR
      )
) ORIGEN
ON (REPLICA.UIDMOTIVO = ORIGEN.UIDMOTIVO)
WHEN MATCHED THEN
UPDATE SET
    REPLICA.SMOTIVO = ORIGEN.SMOTIVO,
    REPLICA.BACTIVO = ORIGEN.BACTIVO,
    REPLICA.BBAJA = ORIGEN.BBAJA,
    REPLICA.SDESCRIPCION = ORIGEN.SDESCRIPCION,
    REPLICA.ITIPO = ORIGEN.ITIPO,
    REPLICA.BPERMITIROPERACIONES = ORIGEN.BPERMITIROPERACIONES,
    REPLICA.BPERMITIRREACTIVAR = ORIGEN.BPERMITIRREACTIVAR,
    REPLICA.BPERMITIREDITAR = ORIGEN.BPERMITIREDITAR;

-- Actualización de activos entre ambas tablas MotivosBorrado
MERGE INTO PREP_APP.MOTIVOS target
USING (
  SELECT 
    t1.UIDMOTIVO,
    t1.BACTIVO,
    t1.BBAJA
  FROM PREP_CATALOGOS.MOTIVOS t1
  INNER JOIN PREP_APP.MOTIVOS t2 ON t1.UIDMOTIVO = t2.UIDMOTIVO
  WHERE t1.BACTIVO <> t2.BACTIVO OR t1.BBAJA <> t2.BBAJA
) source
ON (target.UIDMOTIVO = source.UIDMOTIVO)
WHEN MATCHED THEN
UPDATE SET 
  target.BACTIVO = source.BACTIVO,
  target.BBAJA = source.BBAJA;


------------------ TIPO OPERACIONES ------------------ 
-- Inserción en registros TipoOperacionesComercioCreacion
INSERT INTO PREP_APP.TIPOOPERACIONES (
  UIDTIPOOPERACION,
  SNOMBRE,
  SCLAVE,
  IMODULO,
  BACTIVO,
  BBAJA
)
SELECT 
  t1.UIDTIPOOPERACION,
  t1.SNOMBRE,
  t1.SCLAVE,
  t1.IMODULO,
  t1.BACTIVO,
  t1.BBAJA
FROM PREP_CATALOGOS.TIPOOPERACIONES t1
LEFT JOIN PREP_APP.TIPOOPERACIONES t2 
  ON t1.UIDTIPOOPERACION = t2.UIDTIPOOPERACION
WHERE t1.BACTIVO = 1
  AND t1.BBAJA = 0
  AND t2.UIDTIPOOPERACION IS NULL;

-- Actualización en campos TipoOperacionesComercioActualizacion
MERGE INTO PREP_APP.TIPOOPERACIONES REPLICA
USING (
  SELECT 
    t1.UIDTIPOOPERACION,
    t1.SNOMBRE,
    t1.SCLAVE,
    t1.IMODULO
  FROM PREP_CATALOGOS.TIPOOPERACIONES t1
  INNER JOIN PREP_APP.TIPOOPERACIONES t2 ON t1.UIDTIPOOPERACION = t2.UIDTIPOOPERACION
  WHERE t1.BACTIVO = 1 AND t1.BBAJA = 0
    AND (
      t1.SNOMBRE <> t2.SNOMBRE OR
      t1.SCLAVE <> t2.SCLAVE OR
      t1.IMODULO <> t2.IMODULO
    )
) ORIGEN
ON (REPLICA.UIDTIPOOPERACION = ORIGEN.UIDTIPOOPERACION)
WHEN MATCHED THEN
UPDATE SET
  REPLICA.SNOMBRE = ORIGEN.SNOMBRE,
  REPLICA.SCLAVE = ORIGEN.SCLAVE,
  REPLICA.IMODULO = ORIGEN.IMODULO;


-- Actualización de activos entre ambas tablas TipoOperacionesComercioBorrado
MERGE INTO PREP_APP.TIPOOPERACIONES REPLICA
USING (
  SELECT 
    t1.UIDTIPOOPERACION,
    t1.BACTIVO,
    t1.BBAJA
  FROM PREP_CATALOGOS.TIPOOPERACIONES t1
  INNER JOIN PREP_APP.TIPOOPERACIONES t2 ON t1.UIDTIPOOPERACION = t2.UIDTIPOOPERACION
  WHERE t1.BACTIVO <> t2.BACTIVO OR t1.BBAJA <> t2.BBAJA
) ORIGEN
ON (REPLICA.UIDTIPOOPERACION = ORIGEN.UIDTIPOOPERACION)
WHEN MATCHED THEN
UPDATE SET
  REPLICA.BACTIVO = ORIGEN.BACTIVO,
  REPLICA.BBAJA = ORIGEN.BBAJA;

------------------ TIPO TARIFAS -----------------------

-- Inserción en registros TipoTarifasCreacion
INSERT INTO PREP_APP.TIPOSTARIFA (
  UIDTIPOTARIFA,
  STIPOTARIFA,
  SCLAVETIPOTARIFA,
  ITIPOTARJETA
)
SELECT 
  t1.UIDTIPOTARIFA,
  t1.STIPOTARIFA,
  t1.SCLAVETIPOTARIFA,
  t1.ITIPOTARJETA
FROM PREP_CATALOGOS.TIPOTARIFAS t1
LEFT JOIN PREP_APP.TIPOSTARIFA t2 
  ON t1.UIDTIPOTARIFA = t2.UIDTIPOTARIFA
WHERE t1.BACTIVO = 1
  AND t1.BBAJA = 0
  AND t2.UIDTIPOTARIFA IS NULL;

-- Actualización en campos TipoTarifasActualizacion
MERGE INTO PREP_APP.TIPOSTARIFA REPLICA
USING (
  SELECT 
    t1.UIDTIPOTARIFA,
    t1.STIPOTARIFA,
    t1.SCLAVETIPOTARIFA,
    t1.ITIPOTARJETA
  FROM PREP_CATALOGOS.TIPOTARIFAS t1
  INNER JOIN PREP_APP.TIPOSTARIFA t2 
    ON t1.UIDTIPOTARIFA = t2.UIDTIPOTARIFA
  WHERE t1.BACTIVO = 1 AND t1.BBAJA = 0
    AND (
      t1.STIPOTARIFA <> t2.STIPOTARIFA OR
      t1.SCLAVETIPOTARIFA <> t2.SCLAVETIPOTARIFA OR
      t1.ITIPOTARJETA <> t2.ITIPOTARJETA
    )
) ORIGEN
ON (REPLICA.UIDTIPOTARIFA = ORIGEN.UIDTIPOTARIFA)
WHEN MATCHED THEN
UPDATE SET
  REPLICA.STIPOTARIFA = ORIGEN.STIPOTARIFA,
  REPLICA.SCLAVETIPOTARIFA = ORIGEN.SCLAVETIPOTARIFA,
  REPLICA.ITIPOTARJETA = ORIGEN.ITIPOTARJETA;
