-- Evento: ridango.rutas.create
SELECT
'COMPARACIÓN ENTRE PREP_RIDANGOSYNC.RUTAS vs PREP_SIGNALRQUERY.RUTAS' AS fuente,
COUNT(0) AS discrepancias
FROM PREP_RIDANGOSYNC.RUTAS t1
LEFT JOIN PREP_SIGNALRQUERY.RUTAS t2 ON t1.IIDRUTA = t2.IROUTEID
WHERE
t1.BACTIVO = 1 AND t1.BBAJA = 0 AND
t2.IROUTEID IS NULL
UNION ALL
-- Evento: ridango.rutas.update
SELECT 
 	'COMPARACIÓN ENTRE PREP_RIDANGOSYNC.RUTAS vs PREP_SIGNALRQUERY.RUTAS' AS fuente,
	COUNT(0) AS discrepancias
FROM PREP_RIDANGOSYNC.RUTAS t1
INNER JOIN PREP_SIGNALRQUERY.RUTAS t2 ON t1.IIDRUTA = t2.IROUTEID
WHERE t1.BACTIVO = 1 AND t1.BBAJA = 0
AND (t1.IIDRUTA  <> t2.IROUTEID
OR t1.SINDEX   <> t2.SROUTE_INDEX
OR t1.SNOMBRE  <> t2.SROUTE_NAME_CODE
OR t1.SNOMBREALTERNO <> t2.SALTERNATIVE_NAME
OR t1.SNOMBREDESTINO <> t2.SDESTINATION_NAME
OR t1.IIDRUTAMAESTRA  <> t2.IROUTE_MASTERID)

--INSERTS/UPDATE

MERGE INTO PREP_SIGNALRQUERY.RUTAS AS dest
USING (
    SELECT t1.IIDRUTA, t1.SINDEX, t1.SNOMBRE, t1.SNOMBREALTERNO, t1.SNOMBREDESTINO, t1.IIDRUTAMAESTRA
		FROM PREP_RIDANGOSYNC.RUTAS t1
		INNER JOIN PREP_SIGNALRQUERY.RUTAS t2 ON t1.IIDRUTA = t2.IROUTEID
		WHERE t1.BACTIVO = 1 AND t1.BBAJA = 0
		AND (t1.IIDRUTA  <> t2.IROUTEID
		OR t1.SINDEX   <> t2.SROUTE_INDEX
		OR t1.SNOMBRE  <> t2.SROUTE_NAME_CODE
		OR t1.SNOMBREALTERNO <> t2.SALTERNATIVE_NAME
		OR t1.SNOMBREDESTINO <> t2.SDESTINATION_NAME
		OR t1.IIDRUTAMAESTRA  <> t2.IROUTE_MASTERID)
) AS src
ON dest.IROUTEID = src.IIDRUTA
WHEN MATCHED THEN
  UPDATE SET
	dest.IROUTEID = src.IIDRUTA,
	dest.SROUTE_INDEX = src.SINDEX ,
	dest.SROUTE_NAME_CODE = src.SNOMBRE,
	dest.SALTERNATIVE_NAME = src.SNOMBREALTERNO,
	dest.SDESTINATION_NAME = src.SNOMBREDESTINO,
	dest.IROUTE_MASTERID = src.IIDRUTAMAESTRA