
-- 1. Tabla comercio
--Creacion de la tabla de comercio

-- --Creacion de la tabla de comercio
-- CREATE TABLE CREDENCIALIZACION.COMERCIOS 
-- (
--   UIDCOMERCIO VARCHAR2(50) NOT NULL 
-- , SCOMERCIO VARCHAR2(100) 
-- , CONSTRAINT COMERCIOS_PK PRIMARY KEY 
--   (
--     UIDCOMERCIO 
--   )
--   ENABLE 
-- );

-- ALTER TABLE CREDENCIALIZACION.TARJETAS 
-- ADD (UIDCOMERCIO VARCHAR2(50) );

-- COMMENT ON COLUMN CREDENCIALIZACION.TARJETAS.UIDCOMERCIO IS 'Id de referencia al comercio asignado a la tarjeta';

-- ALTER TABLE CREDENCIALIZACION.TARJETAS
-- ADD CONSTRAINT TARJETAS_COMERCIO_FK FOREIGN KEY
-- (
--   UIDCOMERCIO 
-- )
-- REFERENCES CREDENCIALIZACION.COMERCIOS
-- (
--   UIDCOMERCIO 
-- )
-- ENABLE;

-- --Comentarios
-- COMMENT ON COLUMN CREDENCIALIZACION.COMERCIOS.UIDCOMERCIO IS 'Id del comercio';
-- COMMENT ON COLUMN CREDENCIALIZACION.COMERCIOS.SCOMERCIO IS 'Nombre del comercio';

-- --poblado de la tabla
-- INSERT INTO CREDENCIALIZACION.COMERCIOS (UIDCOMERCIO,SCOMERCIO)
-- SELECT c.UIDCOMERCIO,c.SCOMERCIO FROM CATALOGOS.COMERCIOS c; 

-- 2. Nueva columna en tarjetas
--Se agrega columna de idcomercio para la relacion con el comercio

-- ALTER TABLE CREDENCIALIZACION.TARJETAS
-- ADD CONSTRAINT TARJETAS_COMERCIO_FK FOREIGN KEY
-- (
--   UIDCOMERCIO 
-- )
-- REFERENCES COMERCIOS
-- (
--   UIDCOMERCIO 
-- )
-- ENABLE;

--Comentarios
-- COMMENT ON COLUMN CREDENCIALIZACION.TARJETAS.UIDCOMERCIO IS 'Id del comercio relacionado a la tarjeta';

--Poblado de la columna uidcomercio--todo revisar
-- -- -- -- -- -- -- UPDATE CREDENCIALIZACION.TARJETAS t
-- -- -- -- -- -- -- 	SET UIDCOMERCIO = (SELECT c.UIDCOMERCIO  
-- -- -- -- -- -- -- 			FROM CREDENCIALIZACION.COMERCIOTARJETAS c
-- -- -- -- -- -- -- 			WHERE t.UIDTARJETA = c.UIDTARJETA)
-- -- -- -- -- -- -- WHERE EXISTS (
-- -- -- -- -- -- -- 	SELECT 1 FROM CREDENCIALIZACION.COMERCIOTARJETAS c
-- -- -- -- -- -- -- 	WHERE c.BACTIVO = 1 AND c.BBAJA = 0 AND t.UIDTARJETA = c.UIDTARJETA AND t.UIDCOMERCIO IS NULL
-- -- -- -- -- -- -- );


---todo correctiva usada

UPDATE CREDENCIALIZACION.TARJETAS t
SET UIDCOMERCIO = (SELECT c.UIDCOMERCIO
    FROM CREDENCIALIZACION.COMERCIOTARJETAS c
    WHERE t.UIDTARJETA = c.UIDTARJETA AND c.BACTIVO = 1 AND c.UIDCOMERCIO IN (SELECT h.uidcomercio from CREDENCIALIZACION.COMERCIOS h) and ROWNUM = 1)
    WHERE EXISTS (
    SELECT 1 FROM CREDENCIALIZACION.COMERCIOTARJETAS c
    WHERE c.BACTIVO = 1 AND c.BBAJA = 0 AND t.UIDTARJETA = c.UIDTARJETA AND t.UIDCOMERCIO IS NULL
);
----

-- -- 3. Bitacora
-- --Es para tener el la relacion de del cambio de estatus en las replicas
-- ALTER TABLE CREDENCIALIZACION.BITACORAESTATUS 
-- ADD (UIDOPERACION VARCHAR2(50) );

-- --Comentarios
-- COMMENT ON COLUMN CREDENCIALIZACION.BITACORAESTATUS.UIDOPERACION IS 'IDENTIFICAROR DE LA OPERACION';

-- --Permitir null en motivos en la bitacora para registrar la venta de tarjeta
-- ALTER TABLE CREDENCIALIZACION.BITACORAESTATUS 
-- MODIFY CONSTRAINT BITACORAESTATUS_MOTIVOS_FK DISABLE;

-- ALTER TABLE CREDENCIALIZACION.BITACORAESTATUS  
-- MODIFY (UIDMOTIVO NULL);

-- ALTER TABLE CREDENCIALIZACION.TARJETAS  
-- MODIFY (BBAJA DEFAULT 0 );

-- -- 4. Motivos
-- --Agregar motivos faltanes en CREDENCIALIZACION.MOTIVOS
-- INSERT INTO CREDENCIALIZACION.MOTIVOS (UIDMOTIVO,SNOMBRE,BPERMITIROPERACIONES,BPERMITIRREACTIVAR)
-- SELECT m.UIDMOTIVO,m.SMOTIVO,m.BPERMITIROPERACIONES,m.BPERMITIRREACTIVAR FROM CATALOGOS.MOTIVOS m 
-- WHERE m.UIDMOTIVO not in (select UIDMOTIVO from CREDENCIALIZACION.MOTIVOS) AND m.IMODULO IN (200, 500);

-- --Nota de cambios
-- ** Se deja de escuchar colas **
-- -- Es para unificar y ya no se escucaria
-- 	- Catalogos.Estatus.Creacion.1600 
-- 	- Catalogos.Estatus.Actualizacion.1600
-- 	- Catalogos.Estatus.Borrado.1600