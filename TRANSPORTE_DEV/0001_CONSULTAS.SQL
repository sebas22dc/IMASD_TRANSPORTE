-- SELECT sql_id,
--        parsing_schema_name AS usuario,
--        to_char(last_active_time - 6/24, 'DD-MM-YYYY HH24:MI:SS') AS ultima_actividad,
--        executions,
--        sql_fulltext 
-- FROM   v$sql
-- WHERE  last_active_time > SYSDATE - (10/1440)  -- últimos 10 minutos
-- AND parsing_schema_name = 'APP'
-- ORDER BY last_active_time DESC;
 




-- SELECT username,
--        account_status,
--        expiry_date,
--        lock_date,
--        profile,
--        created
-- FROM   dba_users
-- ORDER BY username ;

-- conn DOCUMENTACION/DOCUMENTACION$2025

-- ALTER USER DOCUMENTACION IDENTIFIED BY "DOCUMENTACION$2025";





-- -- ALTER TABLE APP.ESTADODECUENTA DISABLE CONSTRAINT SYS_C009980;

-- -- select * from app.usuario;
-- -- SELECT USERNAME, ACCOUNT_STATUS, LOCK_DATE, EXPIRY_DATE, CREATED, PROFILE FROM DBA_USERS WHERE USERNAME = 'USR_DBA_DEV';


-- -- ALTER USER USR_DBA_DEV IDENTIFIED BY "8RgtVT6d";
-- -- contraseña 8RgtVT6d














-- #REAP - SCRIPTS PARA REPLICAS DE TARJETAS Y MONEDEROS

-- TARJETAS NO REPLICADAS (CRED vs APP)
SELECT 
    COUNT(0) AS discrepancias
FROM  CREDENCIALIZACION.TARJETAS t1
LEFT JOIN APP.TARJETAS t2 ON t1.UIDTARJETA = t2.UIDTARJETA
WHERE t1.BVENDIDA = 1 AND t1.BINICIALIZADA = 1 AND t1.BASOCIADA = 1 AND t2.UIDTARJETA IS NULL

-- INSERT PARA REPLICAR TARJETAS EN APP
INSERT INTO APP.TARJETAS (
    UIDTARJETA, INUMEROMONEDERO, INUMEROTARJETA, SVIGENCIA, UIDESTATUSTARJETA, BVENDIDA, 
    BASOCIADA, UIDTIPOTARIFA, BACTIVO, BBAJA, BINICIALIZADA, UIDMONEDERO, UIDMOTIVO
)
SELECT 
	T1.UIDTARJETA, T1.INUMEROMONEDERO, T1.INUMEROTARJETA, T1.SVIGENCIA, T1.UIDESTATUSTARJETA, T1.BVENDIDA, 
	T1.BASOCIADA, T1.UIDTIPOTARIFA, T1.BACTIVO, T1.BBAJA, T1.BINICIALIZADA, T1.UIDMONEDERO, T1.UIDMOTIVO
FROM  CREDENCIALIZACION.TARJETAS T1
LEFT JOIN APP.TARJETAS T2 ON T1.UIDTARJETA = T2.UIDTARJETA
	WHERE T1.BVENDIDA = 1 AND T1.BINICIALIZADA = 1 AND T1.BASOCIADA = 1 AND T2.UIDTARJETA IS NULL;

commit;
-- MONEDEROS NO REPLICADOS EN APP
SELECT
    COUNT(0) AS discrepancias
FROM  MONEDEROCOMANDOS.MONEDERO t1
INNER JOIN MONEDEROCONSULTAS.ESTADODECUENTA e ON t1.UIDMONEDERO = e.UIDMONEDERO 
LEFT JOIN APP.ESTADODECUENTA t2 ON t1.UIDMONEDERO = t2.UIDMONEDERO 
WHERE t1.BACTIVO = 0 AND t1.BBAJA = 1 AND t2.UIDMONEDERO IS NULL

-- INSERT PARA REPLICAR MONEDEROS NO EN APP
INSERT INTO APP.ESTADODECUENTA (
	UIDESTADODECUENTA, UIDMONEDERO, UIDTIPOTARIFA, UIDULTIMAOPERACION, UIDESTATUS, INUMMONEDERO, DSALDO, STIPOTARIFA, STELEFONO, SESTATUS, BACTIVO, BBAJA, 
	DTFECHAULTIMAOPERACION, DTFECHAULTIMOABONO, DTFECHACREACION, DTFECHABAJA, SNOMBRE, SAPELLIDOPATERNO, SAPELLIDOMATERNO, SCORREO, SFECHAVIGENCIA, DTFECHANACIMIENTO, 
	UIDTIPOMONEDERO, STIPOMONEDERO, INUMTARJETA, UIDMOTIVO, SPANHASH
)
SELECT
	e.UIDESTADODECUENTA, e.UIDMONEDERO, e.UIDTIPOTARIFA, e.UIDULTIMAOPERACION, e.UIDESTATUS, e.INUMMONEDERO, e.DSALDO, e.STIPOTARIFA, e.STELEFONO, e.SESTATUS, e.BACTIVO, e.BBAJA,
	e.DTFECHAULTIMAOPERACION, e.DTFECHAULTIMOABONO, e.DTFECHACREACION, e.DTFECHABAJA, e.SNOMBRE, e.SAPELLIDOPATERNO, e.SAPELLIDOMATERNO, e.SCORREO, e.SFECHAVIGENCIA, e.DTFECHANACIMIENTO,
	e.UIDTIPOMONEDERO, e.STIPOMONEDERO, e.INUMTARJETA, e.UIDMOTIVO, e.SPANHASH
FROM  MONEDEROCOMANDOS.MONEDERO t1
INNER JOIN MONEDEROCONSULTAS.ESTADODECUENTA e ON t1.UIDMONEDERO = e.UIDMONEDERO 
LEFT JOIN APP.ESTADODECUENTA t2 ON t1.UIDMONEDERO = t2.UIDMONEDERO 
WHERE t1.BACTIVO = 0 AND t1.BBAJA = 1 AND t2.UIDMONEDERO IS NULL

commit;



-- MONEDEROS ACTIVOS NO REPLICADOS EN APP
SELECT
    COUNT(0) AS discrepancias
FROM  MONEDEROCOMANDOS.MONEDERO t1
INNER JOIN MONEDEROCONSULTAS.ESTADODECUENTA e ON t1.UIDMONEDERO = e.UIDMONEDERO 
LEFT JOIN APP.ESTADODECUENTA t2 ON t1.UIDMONEDERO = t2.UIDMONEDERO 
WHERE t1.BACTIVO = 1 AND t1.BBAJA = 0 AND t2.UIDMONEDERO IS NULL

-- INSERT PARA REPLICAR MONEDEROS ACTIVOS EN APP
INSERT INTO APP.ESTADODECUENTA (
	UIDESTADODECUENTA, UIDMONEDERO, UIDTIPOTARIFA, UIDULTIMAOPERACION, UIDESTATUS, INUMMONEDERO, DSALDO, STIPOTARIFA, STELEFONO, SESTATUS, BACTIVO, BBAJA, 
	DTFECHAULTIMAOPERACION, DTFECHAULTIMOABONO, DTFECHACREACION, DTFECHABAJA, SNOMBRE, SAPELLIDOPATERNO, SAPELLIDOMATERNO, SCORREO, SFECHAVIGENCIA, DTFECHANACIMIENTO, 
	UIDTIPOMONEDERO, STIPOMONEDERO, INUMTARJETA, UIDMOTIVO, SPANHASH
)
SELECT
	e.UIDESTADODECUENTA, e.UIDMONEDERO, e.UIDTIPOTARIFA, e.UIDULTIMAOPERACION, e.UIDESTATUS, e.INUMMONEDERO, e.DSALDO, e.STIPOTARIFA, e.STELEFONO, e.SESTATUS, e.BACTIVO, e.BBAJA,
	e.DTFECHAULTIMAOPERACION, e.DTFECHAULTIMOABONO, e.DTFECHACREACION, e.DTFECHABAJA, e.SNOMBRE, e.SAPELLIDOPATERNO, e.SAPELLIDOMATERNO, e.SCORREO, e.SFECHAVIGENCIA, e.DTFECHANACIMIENTO,
	e.UIDTIPOMONEDERO, e.STIPOMONEDERO, e.INUMTARJETA, e.UIDMOTIVO, e.SPANHASH
FROM  MONEDEROCOMANDOS.MONEDERO t1
INNER JOIN MONEDEROCONSULTAS.ESTADODECUENTA e ON t1.UIDMONEDERO = e.UIDMONEDERO 
LEFT JOIN APP.ESTADODECUENTA t2 ON t1.UIDMONEDERO = t2.UIDMONEDERO 
WHERE t1.BACTIVO = 1 AND t1.BBAJA = 0 AND t2.UIDMONEDERO IS NULL




MERGE INTO NOTIFICACIONES.USUARIO REPLICA
USING (
SELECT 
t1.uidusuario,
t1.SNOMBRE,
t1.SAPELLIDOPATERNO,
t1.SAPELLIDOMATERNO,
t1.STELEFONO,
t1.SCORREO,
t1.UIDMONEDERO,
t1.SLADA
FROM  APP.USUARIO t1
INNER JOIN NOTIFICACIONES.USUARIO t2 ON t1.UIDUSUARIO = t2.UIDUSUARIO
WHERE t1.BACTIVO = 1 AND t1.BBAJA = 0 AND 
(
t1.SNOMBRE <> t2.SNOMBRE 
OR t1.SAPELLIDOPATERNO <> t2.SAPELLIDOPATERNO 
OR t1.SAPELLIDOMATERNO <> t2.SAPELLIDOMATERNO  
OR t1.STELEFONO <> t2.STELEFONO 
OR t1.SCORREO <> t2.SCORREO 
OR t1.UIDMONEDERO <> t2.UIDMONEDERO 
OR t1.SLADA <> t2.SLADA 
)
) ORIGEN
ON (REPLICA.uidusuario = ORIGEN.uidusuario)
WHEN MATCHED THEN
UPDATE SET
  REPLICA.SNOMBRE = ORIGEN.SNOMBRE,
  REPLICA.SAPELLIDOPATERNO = ORIGEN.SAPELLIDOPATERNO,
  REPLICA.SAPELLIDOMATERNO = ORIGEN.SAPELLIDOMATERNO,
  REPLICA.STELEFONO= ORIGEN.STELEFONO,
  REPLICA.SCORREO= ORIGEN.SCORREO,
  REPLICA.UIDMONEDERO= ORIGEN.UIDMONEDERO,
  REPLICA.SLADA= ORIGEN.SLADA
  ;
  COMMIT;
 


INSERT INTO APP.TIPOSTARIFA (
    UIDTIPOTARIFA, STIPOTARIFA, SCLAVETIPOTARIFA, ITIPOTARJETA
)
SELECT
    t1.UIDTIPOTARIFA, t1.STIPOTARIFA, t1.SCLAVETIPOTARIFA, t1.ITIPOTARJETA
FROM CATALOGOS.TIPOTARIFAS t1
LEFT JOIN APP.TIPOSTARIFA t2 
       ON t1.UIDTIPOTARIFA = t2.UIDTIPOTARIFA
WHERE t1.BACTIVO = 1 AND t1.BBAJA = 0 AND t2.UIDTIPOTARIFA IS NULL;

commit;




